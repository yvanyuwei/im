<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vm.im.dao.user.UserFriendMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.vm.im.entity.user.UserFriend">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <id column="friend_id" property="friendId" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="top" property="top" jdbcType="INTEGER"/>
        <result column="friend_group_id" property="friendGroupId" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="del_flag" property="delFlag" jdbcType="INTEGER"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 查找好友映射结果 -->
    <resultMap id="FindUserResultMap" type="com.vm.im.common.vo.user.FindUserVO">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="sign" property="sign" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="UserMsgResultMap" type="com.vm.im.common.vo.user.UserMsgVO">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="sign" property="sign" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="friend_id" property="friendId" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
      user_id, friend_id, nickname, top, friend_group_id, create_time, del_flag, remarks
    </sql>

    <select id="selectByPrimaryKey" resultMap="UserMsgResultMap" parameterType="java.lang.String">
        select
          iu.id, iu.avatar,iu.sex,iu.mobile,iu.email,iu.sign, uf.nickname, uf.friend_id
        from (SELECT
              iuf.user_id,iuf.friend_id,iuf.nickname
              FROM im_user_friend iuf
              where (iuf.user_id = #{userId,jdbcType=VARCHAR}
              or iuf.friend_id = #{friendId,jdbcType=VARCHAR})
              and iuf.del_flag = 0) uf
        LEFT JOIN im_user iu
        ON uf.user_id = iu.id
        where iu.del_flag = 0;
    </select>

    <select id="selectByFriendId" resultMap="BaseResultMap" parameterType="com.vm.im.entity.user.UserFriend">
        select
        <include refid="Base_Column_List"/>
        from im_user_friend
        where friend_id = #{friendId,jdbcType=VARCHAR}
        and del_flag = #{delFlag,jdbcType=INTEGER}
    </select>

    <insert id="insertSelective" parameterType="com.vm.im.entity.user.UserFriend">
        insert into im_user_friend
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="friendId != null">
                friend_id,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="top != null">
                top,
            </if>
            <if test="friendGroupId != null">
                friend_group_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="delFlag != null">
                del_flag,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="friendId != null">
                #{friendId,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="top != null">
                #{top,jdbcType=INTEGER},
            </if>
            <if test="friendGroupId != null">
                #{friendGroupId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="delFlag != null">
                #{delFlag,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateUserMessage" parameterType="java.lang.String">
        update im_user_friend
          set nickname = #{nickname,jdbcType=VARCHAR}
          where friend_id = #{friendId,jdbcType=VARCHAR}
          and nickname = #{nickname,jdbcType=VARCHAR}
    </update>

    <select id="findUser" resultMap="FindUserResultMap" parameterType="java.lang.String">
        select
        iu.`id` id , iu.`avatar` avatar, fn.`nickname` name, iu.`sign` sign
        from (SELECT iuf.`friend_id`  friend_id, iuf.`nickname` nickname
              FROM im_user_friend iuf
              where iuf.user_id = #{uid,jdbcType=VARCHAR}
              and iuf.del_flag = 0
              and iuf.friend_id like #{condition,jdbcType=VARCHAR}
              or iuf.nickname like #{condition,jdbcType=VARCHAR}) fn
        left join `im_user` iu
        ON iu.`id` = fn.`friend_id`
        where iu.del_flag = 0
    </select>

</mapper>
